<?php

namespace Tests\Agenda;

use Carbon\Carbon;
use PHPUnit\Framework\Attributes\Test;
use PHPUnit\Framework\TestCase;
use Puntodev\Bookables\Agenda\WeeklyScheduleAgenda;
use Puntodev\Bookables\WeeklySchedule;
use Tests\Concerns\WithRangeAssertions;

class WeeklyScheduleAgendaTest extends TestCase
{
    use WithRangeAssertions;

    #[Test]
    public function possibleRanges(): void
    {
        $agenda = new WeeklyScheduleAgenda(WeeklySchedule::fromArray(WeeklySchedule::defaultWorkingHours()));

        $result = $agenda->possibleRanges(
            Carbon::parse("2020-01-19"),
            Carbon::parse("2020-01-31"),
        );

        $this->assertRanges([
            '2020-01-20T08:00:00.000000Z/2020-01-20T12:00:00.000000Z',
            '2020-01-20T14:00:00.000000Z/2020-01-20T18:00:00.000000Z',
            '2020-01-21T08:00:00.000000Z/2020-01-21T12:00:00.000000Z',
            '2020-01-21T14:00:00.000000Z/2020-01-21T18:00:00.000000Z',
            '2020-01-22T08:00:00.000000Z/2020-01-22T12:00:00.000000Z',
            '2020-01-22T14:00:00.000000Z/2020-01-22T18:00:00.000000Z',
            '2020-01-23T08:00:00.000000Z/2020-01-23T12:00:00.000000Z',
            '2020-01-23T14:00:00.000000Z/2020-01-23T18:00:00.000000Z',
            '2020-01-24T08:00:00.000000Z/2020-01-24T12:00:00.000000Z',
            '2020-01-24T14:00:00.000000Z/2020-01-24T18:00:00.000000Z',
            '2020-01-25T10:00:00.000000Z/2020-01-25T12:00:00.000000Z',
            '2020-01-27T08:00:00.000000Z/2020-01-27T12:00:00.000000Z',
            '2020-01-27T14:00:00.000000Z/2020-01-27T18:00:00.000000Z',
            '2020-01-28T08:00:00.000000Z/2020-01-28T12:00:00.000000Z',
            '2020-01-28T14:00:00.000000Z/2020-01-28T18:00:00.000000Z',
            '2020-01-29T08:00:00.000000Z/2020-01-29T12:00:00.000000Z',
            '2020-01-29T14:00:00.000000Z/2020-01-29T18:00:00.000000Z',
            '2020-01-30T08:00:00.000000Z/2020-01-30T12:00:00.000000Z',
            '2020-01-30T14:00:00.000000Z/2020-01-30T18:00:00.000000Z',
            '2020-01-31T08:00:00.000000Z/2020-01-31T12:00:00.000000Z',
            '2020-01-31T14:00:00.000000Z/2020-01-31T18:00:00.000000Z',
        ], $result);
    }

    #[Test]
    public function possibleRangesWithTimeZone(): void
    {
        $agenda = new WeeklyScheduleAgenda(WeeklySchedule::fromArray(WeeklySchedule::defaultWorkingHours()));

        $tz = "Pacific/Auckland";
        $result = $agenda->possibleRanges(
            Carbon::parse("2020-01-19", $tz),
            Carbon::parse("2020-01-31", $tz),
        );

        $this->assertRanges([
            '2020-01-19T19:00:00.000000Z/2020-01-19T23:00:00.000000Z',
            '2020-01-20T01:00:00.000000Z/2020-01-20T05:00:00.000000Z',
            '2020-01-20T19:00:00.000000Z/2020-01-20T23:00:00.000000Z',
            '2020-01-21T01:00:00.000000Z/2020-01-21T05:00:00.000000Z',
            '2020-01-21T19:00:00.000000Z/2020-01-21T23:00:00.000000Z',
            '2020-01-22T01:00:00.000000Z/2020-01-22T05:00:00.000000Z',
            '2020-01-22T19:00:00.000000Z/2020-01-22T23:00:00.000000Z',
            '2020-01-23T01:00:00.000000Z/2020-01-23T05:00:00.000000Z',
            '2020-01-23T19:00:00.000000Z/2020-01-23T23:00:00.000000Z',
            '2020-01-24T01:00:00.000000Z/2020-01-24T05:00:00.000000Z',
            '2020-01-24T21:00:00.000000Z/2020-01-24T23:00:00.000000Z',

            '2020-01-26T19:00:00.000000Z/2020-01-26T23:00:00.000000Z',
            '2020-01-27T01:00:00.000000Z/2020-01-27T05:00:00.000000Z',
            '2020-01-27T19:00:00.000000Z/2020-01-27T23:00:00.000000Z',
            '2020-01-28T01:00:00.000000Z/2020-01-28T05:00:00.000000Z',
            '2020-01-28T19:00:00.000000Z/2020-01-28T23:00:00.000000Z',
            '2020-01-29T01:00:00.000000Z/2020-01-29T05:00:00.000000Z',
            '2020-01-29T19:00:00.000000Z/2020-01-29T23:00:00.000000Z',
            '2020-01-30T01:00:00.000000Z/2020-01-30T05:00:00.000000Z',
            '2020-01-30T19:00:00.000000Z/2020-01-30T23:00:00.000000Z',
            '2020-01-31T01:00:00.000000Z/2020-01-31T05:00:00.000000Z',
        ], $result);
    }
}
